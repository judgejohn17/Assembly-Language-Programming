


ARM Macro Assembler    Page 1 


    1 00000000         ;TTL CMPE 250 Exercise Two
    2 00000000         ;****************************************************************
    3 00000000         ;This program solves a function, given in decimal, in hexadecimal 
    4 00000000         ;f(x)=-5+62-(9/4)-(7*9)+58+17
    5 00000000         ;Name:  <John Judge>
    6 00000000         ;Date:  <2/4/16>
    7 00000000         ;Class:  CMPE-250
    8 00000000         ;Section:  <Section L2, Thursday, 2:00pm-3:50pm>
    9 00000000         ;---------------------------------------------------------------
   10 00000000         
   11 00000000         ;****************************************************************
   12 00000000         ;Assembler directives
   13 00000000                 THUMB
   15 00000000         ;****************************************************************
   16 00000000         ;EQUates 
   17 00000000 00000002 
                       DIV4    EQU              2
   18 00000000 00000003 
                       MULT8   EQU              3
   19 00000000         ;Vectors
   20 00000000 000000C0 
                       VECTOR_TABLE_SIZE
                               EQU              0x000000C0
   21 00000000 00000004 
                       VECTOR_SIZE
                               EQU              4           ;Bytes per vector
   22 00000000         ;Stack
   23 00000000 00000100 
                       SSTACK_SIZE
                               EQU              0x00000100
   24 00000000         ;****************************************************************
   25 00000000         ;Program
   26 00000000         ;Linker requires Reset_Handler
   27 00000000                 AREA             MyCode,CODE,READONLY
   28 00000000                 ENTRY
   29 00000000                 EXPORT           Reset_Handler
   30 00000000         Reset_Handler
   31 00000000         main
   32 00000000         ;---------------------------------------------------------------
   33 00000000         ;>>>>> begin main program code <<<<<
   34 00000000 BF00            NOP
   35 00000002         ;R0 <- (-5+62)



ARM Macro Assembler    Page 2 


   36 00000002 2205            MOVS             R2, #5      ;Store Decimal-5 in R2
   37 00000004 4251            RSBS             R1,R2,#0    ;Negate Decimal-5 store value in R1
   38 00000006 223E            MOVS             R2, #62     ;Store Decimal-62 in R2
   39 00000008 1888            ADDS             R0,R1,R2    ;Adds contents of R2 and R1 together and stores value in R0
   40 0000000A         ;R0 <- (R0-(9/4))
   41 0000000A 2109            MOVS             R1, #9      ;Store decimal-9 in R1
   42 0000000C 1089            ASRS             R1,R1,#DIV4 ;Divide the contents of R1 by 4 and store value in R1
   43 0000000E 1A40            SUBS             R0,R0,R1    ;Subtract contents of R0 by R1 and store value in R0
   44 00000010         ;R0 <- (R0-(7x9))
   45 00000010 2107            MOVS             R1, #7      ;Store decimal-7 in R1
   46 00000012 00CA            LSLS             R2,R1,#MULT8 ;Multiply the content of R1 by 8 and store value in R1
   47 00000014 1851            ADDS             R1,R2,R1    ;Add contents of R1 and R2 together and store in R1
   48 00000016 1A40            SUBS             R0,R0,R1    ;Subtract contents of R0 by R1 and store value in R0
   49 00000018         ;R0 <- (R0+58)
   50 00000018 213A            MOVS             R1, #58     ;Store decimal-58 in R1
   51 0000001A 1840            ADDS             R0,R0,R1    ;Add contents of R0 and R1 together and store vlaue in R0
   52 0000001C         ;R0 <- (R0+17)
   53 0000001C 2111            MOVS             R1, #17     ;Store decimal-17 in R1
   54 0000001E 1840            ADDS             R0,R0,R1    ;Add contents of R0 and R1 together and store value in R0. This is the final value
   55 00000020         ;>>>>>   end main program code <<<<<
   56 00000020         ;Stay here
   57 00000020 E7FE            B                .
   58 00000022         ;---------------------------------------------------------------
   59 00000022         ;>>>>> begin subroutine code <<<<<
   60 00000022         ;>>>>>   end subroutine code <<<<<
   61 00000022 00 00           ALIGN
   62 00000024         ;****************************************************************
   63 00000024         ;Vector Table Mapped to Address 0 at Reset
   64 00000024         ;Linker requires __Vectors to be exported
   65 00000024                 AREA             RESET, DATA, READONLY
   66 00000000                 EXPORT           __Vectors
   67 00000000                 EXPORT           __Vectors_End
   68 00000000                 EXPORT           __Vectors_Size
   69 00000000         __Vectors
   70 00000000         ;ARM core vectors
   71 00000000 00000000        DCD              __initial_sp ;00:end of stack
   72 00000004 00000000        DCD              Reset_Handler ;reset vector
   73 00000008 00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 



ARM Macro Assembler    Page 3 


              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 



ARM Macro Assembler    Page 4 


              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00               SPACE            (VECTOR_TABLE_SIZE - (2 * VECTOR_SIZE))
   74 000000C0         __Vectors_End
   75 000000C0 000000C0 
                       __Vectors_Size
                               EQU              __Vectors_End - __Vectors
   76 000000C0                 ALIGN
   77 000000C0         ;****************************************************************
   78 000000C0         ;Constants
   79 000000C0                 AREA             MyConst,DATA,READONLY
   80 00000000         ;>>>>> begin constants here <<<<<
   81 00000000         ;>>>>>   end constants here <<<<<
   82 00000000         ;****************************************************************
   83 00000000                 AREA             |.ARM.__at_0x1FFFE000|,DATA,READWRITE,ALIGN=3
   84 00000000                 EXPORT           __initial_sp
   85 00000000         ;Allocate system stack
   86 00000000                 IF               :LNOT::DEF:SSTACK_SIZE
   88                          ENDIF
   89 00000000 00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 



ARM Macro Assembler    Page 5 


              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 



ARM Macro Assembler    Page 6 


              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00       Stack_Mem
                               SPACE            SSTACK_SIZE
   90 00000100         __initial_sp
   91 00000100         ;****************************************************************
   92 00000100         ;Variables
   93 00000100                 AREA             MyData,DATA,READWRITE
   94 00000000         ;>>>>> begin variables here <<<<<
   95 00000000         ;>>>>>   end variables here <<<<<
   96 00000000                 END
Command Line: --debug --xref --length=49 --width=120 --diag_suppress=9931 --cpu=Cortex-M0+ --apcs=interwork --depend=.\o



ARM Macro Assembler    Page 7 


bjects\exercise02.d -o.\objects\exercise02.o -ID:\Assembly\Exercise02\RTE -IC:\Keil_v5\ARM\PACK\Keil\Kinetis_KLxx_DFP\1.
6.0\Device\Include -IC:\Keil_v5\ARM\CMSIS\Include --predefine="__UVISION_VERSION SETA 515" --predefine="MKL43Z256xxx4 SE
TA 1" --list=.\listings\exercise02.lst Exercise02.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

MyCode 00000000

Symbol: MyCode
   Definitions
      At line 27 in file Exercise02.s
   Uses
      None
Comment: MyCode unused
Reset_Handler 00000000

Symbol: Reset_Handler
   Definitions
      At line 30 in file Exercise02.s
   Uses
      At line 29 in file Exercise02.s
      At line 72 in file Exercise02.s

main 00000000

Symbol: main
   Definitions
      At line 31 in file Exercise02.s
   Uses
      None
Comment: main unused
3 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

RESET 00000000

Symbol: RESET
   Definitions
      At line 65 in file Exercise02.s
   Uses
      None
Comment: RESET unused
__Vectors 00000000

Symbol: __Vectors
   Definitions
      At line 69 in file Exercise02.s
   Uses
      At line 66 in file Exercise02.s
      At line 75 in file Exercise02.s

__Vectors_End 000000C0

Symbol: __Vectors_End
   Definitions
      At line 74 in file Exercise02.s
   Uses
      At line 67 in file Exercise02.s
      At line 75 in file Exercise02.s

3 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

MyConst 00000000

Symbol: MyConst
   Definitions
      At line 79 in file Exercise02.s
   Uses
      None
Comment: MyConst unused
1 symbol



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.ARM.__at_0x1FFFE000 00000000

Symbol: .ARM.__at_0x1FFFE000
   Definitions
      At line 83 in file Exercise02.s
   Uses
      None
Comment: .ARM.__at_0x1FFFE000 unused
Stack_Mem 00000000

Symbol: Stack_Mem
   Definitions
      At line 89 in file Exercise02.s
   Uses
      None
Comment: Stack_Mem unused
__initial_sp 00000100

Symbol: __initial_sp
   Definitions
      At line 90 in file Exercise02.s
   Uses
      At line 71 in file Exercise02.s
      At line 84 in file Exercise02.s

3 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

MyData 00000000

Symbol: MyData
   Definitions
      At line 93 in file Exercise02.s
   Uses
      None
Comment: MyData unused
1 symbol



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

DIV4 00000002

Symbol: DIV4
   Definitions
      At line 17 in file Exercise02.s
   Uses
      At line 42 in file Exercise02.s
Comment: DIV4 used once
MULT8 00000003

Symbol: MULT8
   Definitions
      At line 18 in file Exercise02.s
   Uses
      At line 46 in file Exercise02.s
Comment: MULT8 used once
SSTACK_SIZE 00000100

Symbol: SSTACK_SIZE
   Definitions
      At line 23 in file Exercise02.s
   Uses
      At line 89 in file Exercise02.s
Comment: SSTACK_SIZE used once
VECTOR_SIZE 00000004

Symbol: VECTOR_SIZE
   Definitions
      At line 21 in file Exercise02.s
   Uses
      At line 73 in file Exercise02.s
Comment: VECTOR_SIZE used once
VECTOR_TABLE_SIZE 000000C0

Symbol: VECTOR_TABLE_SIZE
   Definitions
      At line 20 in file Exercise02.s
   Uses
      At line 73 in file Exercise02.s
Comment: VECTOR_TABLE_SIZE used once
__Vectors_Size 000000C0




ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Absolute symbols

Symbol: __Vectors_Size
   Definitions
      At line 75 in file Exercise02.s
   Uses
      At line 68 in file Exercise02.s
Comment: __Vectors_Size used once
6 symbols
349 symbols in table
