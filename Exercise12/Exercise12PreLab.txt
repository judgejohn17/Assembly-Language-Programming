;John Judge
;Alessandro Sarra
;Assembly Language Programming
;4/28/16

//Initalize the DAC0 component with an analog output 
void Init_DAC0() {
	extern UInt16 DAC0_table_0;
	/*Enable TPM0 module clock */
	SIM->SCGC6 |= SIM_SCGC6_DAC0_MASK;
	/*Enable port E module clock */
	SIM->SCGC5 |= SIM_SCGC5_PORTE_MASK;
	/*Connect DAC0_OUT to Port E pin 30 (J4 Pin 11) */
	PORTE->PCR[30] = SET_PTE30_DAC0_OUT;
	/* Set DAC0 DMA disabled and buffer disabled */
	DAC0->C1 = DAC_C1_BUFFER_DISABLED;
	/* Set DAC0 enabled with VDDA as reference voltage. */
	/* and read pointer interrupts disabled */
	DAC0->C0 = DAC_C0_ENABLE;
	/* Set DAC0 output voltage at minimum value */
	DAC0->DAT[0].DATL = DAC_DATH_MIN;
	DAC0->DAT[0].DATH = DAC_DATL_MIN;
}


//Initalize and calibrate the KL46 ADC0 for polled conversion of single ended channed 23 (AD23). 
void Init_ADC0() {
	UInt16 pluCalibVal;
	UInt16 mnCalibVal;
	/* Enable ACD0 module clock */
	SIM->SCGC6 |= SIM_SCGC6_ADC0_MASK;
	/* Set ADC0 power and timing */
	ADC0->CFG1 = ADC0_CFG1_LP_LONG_SGL10_3MHZ;
	/*Select Channel A and set timing */
	ADC0->CFG2 = ADC0_CFG2_CHAN_A_NORMAL_LONG;
	/* Select SW Trigger and VDDA reference */
	ADC0->SC2 = ADC0_SC2_SWTRIG_VDDA;
	/* Start calibration */
	ADC0->SC3 = ADC0_SC3_CAL;
	/*Wait for calibration to be complete */
	while (ADC0->SC3 & ADC_SC3_CAL_MASK) {
		/* Check for calibration failure */
		/* Occurs when CALF flag is set on ADCO->SC3 */
		if((ADC0->SC3 & 0x40) == 0x40) {
			/* Calibration failure, handle appropriately*/	
		}	
		/* Compute and store plus side calibration value */
		pluCalibVal = ADC0->CLP0 + ADC0->CLP1 + ADC0->CLP2 \
		+ ADC0->CLP3 + ADC0->CLP4 + ADC0->CLPS;
		/* Split up the operation to make it more readable */
		pluCalibVal = pluCalibVal >> 1;
		pluCalibVal = pluCalibVal | 0x8000;
		/* ADC0_PG <- calibVal */
		ADC0->PG = pluCalibVal;
		/* Compute and store minus side calibration value */
		mnCalibVal = ADC0->CLM0 + ADC0->CLM1 + ADC0->CLM2 \
		+ ADC0->CLM3 + ADC0->CLM4 + ADC0->CLMS;
		/* Split up the operation to make it more readable */
		mnCalibVal = mnCalibVal >> 1;
		mnCalibVal = mnCalibVal | 0x8000;
		/* ADC0_PG <- calibVal */
		ADC0->PG = mnCalibVal;
	}
	/* Post calibration Initalization. selecting single conversion */
	ADC0->SC3 = ADC0_SC3_SINGLE;
	
}

//Initalize the KL46 TPM0 to produce on channel 4 (TPM0_CH4) a waveform with a 20ms period and a 2ms duty period. 
void Init_TPM0() {
	/* Enable TPM0 module clock */
	SIM->SCGC6 |= SIM_SCGC6_TPM0_MASK;
	/* Enable port E module clock */
	SIM->SCGC5 |= SIM_SCGC5_PORTE_MASK;
	/* Connect TPM0 channel 4 to port E pin 31 */
	/* TODO: ENsure this is the correct #define to use */
	PORTE->PCR[31] = SET_PTE31_TPM0_CH4_OUT;	
	/* Set TPM clock source */
	SIM->SOPT2 &= ~SIM_SOPT2_TPMSRC_MASK;
	SIM->SOPT2 |= SIM_SOPT2_TPM_MCGPLLCLK_DIV2;	
	/* Set TPM0 configuration register to default values */
	TPM0->CONF = TPM_CONF_DEFAULT;
	/* Set TPM0 counter modulo value */
	TPM0->CNT = TPM_CNT_INIT;
	TPM0->MOD = TPM_MOD_PWM_PERIOD_20ms;	
	/* Set TPM0 channel 4 edge-aligned PWM */
	TPM0->CONTROLS[4].CnSC = TPM_CnSC_PWMH;	
	/* Set TPM0 channel 4 value */
	TPM0->CONTROLS[4].CnV = PWM_duty_table_0;	
	/* Set TPM0 counter clock configuration */
	TPM0->SC = TPM_SC_CLK_DIV16;
}