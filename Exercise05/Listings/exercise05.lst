


ARM Macro Assembler    Page 1 Program Title for Listing Header Goes Here


    1 00000000                 TTL              Program Title for Listing Heade
r Goes Here
    2 00000000         ;*******************************************************
                       *********
    3 00000000         ;DescR0ptive comment header goes here.
    4 00000000         ;(What does the program do?)
    5 00000000         ;Name:  <Your name here>
    6 00000000         ;Date:  <Date completed here>
    7 00000000         ;Class:  CMPE-250
    8 00000000         ;Section:  <Your lab section, day, and time here>
    9 00000000         ;-------------------------------------------------------
                       --------
   10 00000000         ;Keil Template for KL46
   11 00000000         ;R. W. Melton
   12 00000000         ;ApR0l 3, 2015
   13 00000000         ;*******************************************************
                       *********
   14 00000000         ;Assembler directives
   15 00000000                 THUMB
   17 00000000         ;*******************************************************
                       *********
   18 00000000         ;Include files
   19 00000000                 GET              MKL46Z4.s   ;Included by start.
                                                            s
   21 00000000         ;*******************************************************
                       *********
   22 00000000         ;EQUates
   23 00000000 00000015 
                       LETTERS EQU              21
   24 00000000         ;PORTx_PCRn (Port x pin control register n [for pin n])
   25 00000000         ;___->10-08:Pin mux control (select 0 to 8)
   26 00000000         ;Use provided PORT_PCR_MUX_SELECT_2_MASK
   27 00000000         ;-------------------------------------------------------
                       --------
   28 00000000         ;Port A
   29 00000000 01000200 
                       PORT_PCR_SET_PTA1_UART0_RX
                               EQU              (PORT_PCR_ISF_MASK :OR: PORT_PC
R_MUX_SELECT_2_MASK)
   30 00000000 01000200 
                       PORT_PCR_SET_PTA2_UART0_TX
                               EQU              (PORT_PCR_ISF_MASK :OR: PORT_PC
R_MUX_SELECT_2_MASK)
   31 00000000         ;-------------------------------------------------------
                       --------
   32 00000000         ;SIM_SCGC4
   33 00000000         ;1->10:UART0 clock gate control (enabled)
   34 00000000         ;Use provided SIM_SCGC4_UART0_MASK
   35 00000000         ;-------------------------------------------------------
                       --------
   36 00000000         ;SIM_SCGC5
   37 00000000         ;1->09:Port A clock gate control (enabled)
   38 00000000         ;Use provided SIM_SCGC5_PORTA_MASK 
   39 00000000         ;-------------------------------------------------------
                       --------
   40 00000000         ;SIM_SOPT2
   41 00000000         ;01=27-26:UART0SRC=UART0 clock source select
   42 00000000         ; (PLLFLLSEL determines MCGFLLCLK' or MCGPLLCLK/2)
   43 00000000         ; 1= 16:PLLFLLSEL=PLL/FLL clock select (MCGPLLCLK/2)



ARM Macro Assembler    Page 2 Program Title for Listing Header Goes Here


   44 00000000 04000000 
                       SIM_SOPT2_UART0SRC_MCGPLLCLK
                               EQU              (1 << SIM_SOPT2_UART0SRC_SHIFT)
   45 00000000 04010000 
                       SIM_SOPT2_UART0_MCGPLLCLK_DIV2
                               EQU              (SIM_SOPT2_UART0SRC_MCGPLLCLK :
OR: SIM_SOPT2_PLLFLLSEL_MASK)
   46 00000000         ;-------------------------------------------------------
                       --------
   47 00000000         ;SIM_SOPT5
   48 00000000         ; 0-> 16:UART0 open drain enable (disabled)
   49 00000000         ; 0-> 02:UART0 receive data select (UART0_RX)
   50 00000000         ;00->01-00:UART0 transmit data select source (UART0_TX)
   51 00000000 00010007 
                       SIM_SOPT5_UART0_EXTERN_MASK_CLEAR
                               EQU              (SIM_SOPT5_UART0ODE_MASK :OR: S
IM_SOPT5_UART0RXSRC_MASK :OR: SIM_SOPT5_UART0TXSRC_MASK)
   52 00000000         ;-------------------------------------------------------
                       --------
   53 00000000         ;UART0_BDH
   54 00000000         ; 0-> 7:LIN break detect IE (disabled)
   55 00000000         ; 0-> 6:RxD input active edge IE (disabled)
   56 00000000         ; 0-> 5:Stop bit number select (1)
   57 00000000         ;00001->4-0:SBR[12:0] (BUSCLK / [9600 * (OSR + 1)])
   58 00000000         ;MCGPLLCLK is 96 MHz
   59 00000000         ;MCGPLLCLK/2 is 48 MHz
   60 00000000         ;BUSCLK is 24 MHz
   61 00000000         ;SBR = 48 MHz / (9600 * 16) = 312.5 --> 312 = 0x138
   62 00000000 00000001 
                       UART0_BDH_9600
                               EQU              0x01
   63 00000000         ;-------------------------------------------------------
                       --------
   64 00000000         ;UART0_BDL
   65 00000000         ;26->7-0:SBR[7:0] (BUSCLK / [9600 * (OSR + 1)])
   66 00000000         ;MCGPLLCLK is 96 MHz
   67 00000000         ;MCGPLLCLK/2 is 48 MHz
   68 00000000         ;BUSCLK is 24 MHz
   69 00000000         ;SBR = 48 MHz / (9600 * 16) = 312.5 --> 312 = 0x138
   70 00000000 00000038 
                       UART0_BDL_9600
                               EQU              0x38
   71 00000000         ;-------------------------------------------------------
                       --------
   72 00000000         ;UART0_C1
   73 00000000         ;0-->7:LOOPS=loops select (normal)
   74 00000000         ;0-->6:DOZEEN=doze enable (disabled)
   75 00000000         ;0-->5:RSRC=receiver source select (internal--no effect 
                       LOOPS=0)
   76 00000000         ;0-->4:M=9- or 8-bit mode select
   77 00000000         ; (1 start, 8 data [lsb first], 1 stop)
   78 00000000         ;0-->3:WAKE=receiver wakeup method select (idle)
   79 00000000         ;0-->2:IDLE=idle line type select (idle begins after sta
                       rt bit)
   80 00000000         ;0-->1:PE=parity enable (disabled)
   81 00000000         ;0-->0:PT=parity type (even parity--no effect PE=0)
   82 00000000 00000000 
                       UART0_C1_8N1
                               EQU              0x00



ARM Macro Assembler    Page 3 Program Title for Listing Header Goes Here


   83 00000000         ;-------------------------------------------------------
                       --------
   84 00000000         ;UART0_C2
   85 00000000         ;0-->7:TIE=transmit IE for TDRE (disabled)
   86 00000000         ;0-->6:TCIE=transmission complete IE for TC (disabled)
   87 00000000         ;0-->5:RIE=receiver IE for RDRF (disabled)
   88 00000000         ;0-->4:ILIE=idle line IE for IDLE (disabled)
   89 00000000         ;1-->3:TE=transmitter enable (enabled)
   90 00000000         ;1-->2:RE=receiver enable (enabled)
   91 00000000         ;0-->1:RWU=receiver wakeup control (normal)
   92 00000000         ;0-->0:SBK=send break (disabled, normal)
   93 00000000 0000000C 
                       UART0_C2_T_R
                               EQU              (UART0_C2_TE_MASK :OR: UART0_C2
_RE_MASK)
   94 00000000         ;-------------------------------------------------------
                       --------
   95 00000000         ;UART0_C3
   96 00000000         ;0-->7:R8T9=9th data bit for receiver (not used M=0)
   97 00000000         ; 10th data bit for transmitter (not used M10=0)
   98 00000000         ;0-->6:R9T8=9th data bit for transmitter (not used M=0)
   99 00000000         ; 10th data bit for receiver (not used M10=0)
  100 00000000         ;0-->5:TXDIR=UART_TX pin direction in single-wire mode
  101 00000000         ; (no effect LOOPS=0)
  102 00000000         ;0-->4:TXINV=transmit data inversion (not inverted)
  103 00000000         ;0-->3:ORIE=overrun IE for OR (disabled)
  104 00000000         ;0-->2:NEIE=noise error IE for NF (disabled)
  105 00000000         ;0-->1:FEIE=framing error IE for FE (disabled)
  106 00000000         ;0-->0:PEIE=parity error IE for PF (disabled)
  107 00000000 00000000 
                       UART0_C3_NO_TXINV
                               EQU              0x00
  108 00000000         ;-------------------------------------------------------
                       --------
  109 00000000         ;UART0_C4
  110 00000000         ; 0--> 7:MAEN1=match address mode enable 1 (disabled)
  111 00000000         ; 0--> 6:MAEN2=match address mode enable 2 (disabled)
  112 00000000         ; 0--> 5:M10=10-bit mode select (not selected)
  113 00000000         ;01111-->4-0:OSR=over sampling ratio (16)
  114 00000000         ; = 1 + OSR for 3 <= OSR <= 31
  115 00000000         ; = 16 for 0 <= OSR <= 2 (invalid values)
  116 00000000 0000000F 
                       UART0_C4_OSR_16
                               EQU              0x0F
  117 00000000 0000000F 
                       UART0_C4_NO_MATCH_OSR_16
                               EQU              UART0_C4_OSR_16
  118 00000000         ;-------------------------------------------------------
                       --------
  119 00000000         ;UART0_C5
  120 00000000         ; 0--> 7:TDMAE=transmitter DMA enable (disabled)
  121 00000000         ; 0--> 6:Reserved; read-only; always 0
  122 00000000         ; 0--> 5:RDMAE=receiver full DMA enable (disabled)
  123 00000000         ;000-->4-2:Reserved; read-only; always 0
  124 00000000         ; 0--> 1:BOTHEDGE=both edge sampling (rising edge only)
  125 00000000         ; 0--> 0:RESYNCDIS=resynchronization disable (enabled)
  126 00000000 00000000 
                       UART0_C5_NO_DMA_SSR_SYNC
                               EQU              0x00



ARM Macro Assembler    Page 4 Program Title for Listing Header Goes Here


  127 00000000         ;-------------------------------------------------------
                       --------
  128 00000000         ;UART0_S1
  129 00000000         ;0-->7:TDRE=transmit data register empty flag; read-only
                       
  130 00000000         ;0-->6:TC=transmission complete flag; read-only
  131 00000000         ;0-->5:RDRF=receive data register full flag; read-only
  132 00000000         ;1-->4:IDLE=idle line flag; write 1 to clear (clear)
  133 00000000         ;1-->3:OR=receiver overrun flag; write 1 to clear (clear
                       )
  134 00000000         ;1-->2:NF=noise flag; write 1 to clear (clear)
  135 00000000         ;1-->1:FE=framing error flag; write 1 to clear (clear)
  136 00000000         ;1-->0:PF=parity error flag; write 1 to clear (clear)
  137 00000000 0000001F 
                       UART0_S1_CLEAR_FLAGS
                               EQU              0x1F
  138 00000000         ;-------------------------------------------------------
                       --------
  139 00000000         ;UART0_S2
  140 00000000         ;1-->7:LBKDIF=LIN break detect interrupt flag (clear)
  141 00000000         ; write 1 to clear
  142 00000000         ;1-->6:RXEDGIF=RxD pin active edge interrupt flag (clear
                       )
  143 00000000         ; write 1 to clear
  144 00000000         ;0-->5:(reserved); read-only; always 0
  145 00000000         ;0-->4:RXINV=receive data inversion (disabled)
  146 00000000         ;0-->3:RWUID=receive wake-up idle detect
  147 00000000         ;0-->2:BRK13=break character generation length (10)
  148 00000000         ;0-->1:LBKDE=LIN break detect enable (disabled)
  149 00000000         ;0-->0:RAF=receiver active flag; read-only
  150 00000000 000000C0 
                       UART0_S2_NO_RXINV_BRK10_NO_LBKDETECT_CLEAR_FLAGS
                               EQU              0xC0
  151 00000000         ;-------------------------------------------------------
                       -------- 
  152 00000000         ;-------------------------------------------------------
                       --------
  153 00000000         ;*******************************************************
                       *********
  154 00000000         ;Program
  155 00000000         ;Linker requires Reset_Handler
  156 00000000                 AREA             MyCode,CODE,READONLY
  157 00000000                 ENTRY
  158 00000000                 EXPORT           Reset_Handler
  159 00000000                 IMPORT           Startup
  160 00000000         Reset_Handler
  161 00000000         main
  162 00000000         ;-------------------------------------------------------
                       --------
  163 00000000         ;Mask interrupts
  164 00000000 B672            CPSID            I
  165 00000002         ;KL46 system startup with 48-MHz system clock
  166 00000002 F7FF FFFE       BL               Startup
  167 00000006         ;-------------------------------------------------------
                       --------
  168 00000006         ;>>>>> begin main program code <<<<<
  169 00000006 F000 F807       BL               Init_UART0_Polling
  170 0000000A         Loop
  171 0000000A F000 F846       BL               GETCHAR



ARM Macro Assembler    Page 5 Program Title for Listing Header Goes Here


  172 0000000E 1E40            SUBS             R0,R0,#1    ;Decipher
  173 00000010 F000 F83A       BL               PUTCHAR
  174 00000014 E7F9            B                Loop
  175 00000016         
  176 00000016         
  177 00000016 E7FE            B                .
  178 00000018         ;>>>>>   end main program code <<<<<
  179 00000018         ;-------------------------------------------------------
                       --------
  180 00000018         
  181 00000018         ;>>>>> begin subroutine code <<<<<
  182 00000018         Init_UART0_Polling
  183 00000018 B40F            PUSH             {R0,R1,R2,R3}
  184 0000001A         ;Select MCGPLLCLK / 2 as UART0 clock source
  185 0000001A 4824            LDR              R0,=SIM_SOPT2
  186 0000001C 4924            LDR              R1,=SIM_SOPT2_UART0SRC_MASK
  187 0000001E 6802            LDR              R2,[R0,#0]
  188 00000020 438A            BICS             R2,R2,R1
  189 00000022 4924            LDR              R1,=SIM_SOPT2_UART0_MCGPLLCLK_D
IV2
  190 00000024 430A            ORRS             R2,R2,R1
  191 00000026 6002            STR              R2,[R0,#0]
  192 00000028         ;Enable external connection for UART0
  193 00000028 4823            LDR              R0,=SIM_SOPT5
  194 0000002A 4924            LDR              R1,= SIM_SOPT5_UART0_EXTERN_MAS
K_CLEAR
  195 0000002C 6802            LDR              R2,[R0,#0]
  196 0000002E 438A            BICS             R2,R2,R1
  197 00000030 6002            STR              R2,[R0,#0]
  198 00000032         ;Enable clock for UART0 module 
  199 00000032 4823            LDR              R0,=SIM_SCGC4
  200 00000034 4923            LDR              R1,= SIM_SCGC4_UART0_MASK
  201 00000036 6802            LDR              R2,[R0,#0]
  202 00000038 430A            ORRS             R2,R2,R1
  203 0000003A 6002            STR              R2,[R0,#0]
  204 0000003C         ;Enable clock for Port A module
  205 0000003C 4822            LDR              R0,=SIM_SCGC5
  206 0000003E 4923            LDR              R1,= SIM_SCGC5_PORTA_MASK
  207 00000040 6802            LDR              R2,[R0,#0]
  208 00000042 430A            ORRS             R2,R2,R1
  209 00000044 6002            STR              R2,[R0,#0]
  210 00000046         ;Connect PORT A Pin 1 (PTA1) to UART0 Rx (J1 Pin 02)
  211 00000046 4822            LDR              R0,=PORTA_PCR1
  212 00000048 4922            LDR              R1,=PORT_PCR_SET_PTA1_UART0_RX
  213 0000004A 6001            STR              R1,[R0,#0]
  214 0000004C         ;Connect PORT A Pin 2 (PTA2) to UART0 Tx (J1 Pin 04)
  215 0000004C 4822            LDR              R0,=PORTA_PCR2
  216 0000004E 4921            LDR              R1,=PORT_PCR_SET_PTA2_UART0_TX
  217 00000050 6001            STR              R1,[R0,#0]
  218 00000052         ;Disable UART0 receiver and transmitter
  219 00000052 4822            LDR              R0,=UART0_BASE
  220 00000054 210C            MOVS             R1,#UART0_C2_T_R
  221 00000056 78C2            LDRB             R2,[R0,#UART0_C2_OFFSET]
  222 00000058 438A            BICS             R2,R2,R1
  223 0000005A 70C2            STRB             R2,[R0,#UART0_C2_OFFSET]
  224 0000005C         ;Set UART0 for 9600 baud, 8N1 protocol
  225 0000005C 2101            MOVS             R1,#UART0_BDH_9600
  226 0000005E 7001            STRB             R1,[R0,#UART0_BDH_OFFSET]
  227 00000060 2138            MOVS             R1,#UART0_BDL_9600



ARM Macro Assembler    Page 6 Program Title for Listing Header Goes Here


  228 00000062 7041            STRB             R1,[R0,#UART0_BDL_OFFSET]
  229 00000064 2100            MOVS             R1,#UART0_C1_8N1
  230 00000066 7081            STRB             R1,[R0,#UART0_C1_OFFSET]
  231 00000068 2100            MOVS             R1,#UART0_C3_NO_TXINV
  232 0000006A 7181            STRB             R1,[R0,#UART0_C3_OFFSET]
  233 0000006C 210F            MOVS             R1,#UART0_C4_NO_MATCH_OSR_16
  234 0000006E 7281            STRB             R1,[R0,#UART0_C4_OFFSET]
  235 00000070 2100            MOVS             R1,#UART0_C5_NO_DMA_SSR_SYNC
  236 00000072 72C1            STRB             R1,[R0,#UART0_C5_OFFSET]
  237 00000074 211F            MOVS             R1,#UART0_S1_CLEAR_FLAGS
  238 00000076 7101            STRB             R1,[R0,#UART0_S1_OFFSET]
  239 00000078 21C0            MOVS             R1, #UART0_S2_NO_RXINV_BRK10_NO
_LBKDETECT_CLEAR_FLAGS
  240 0000007A 7141            STRB             R1,[R0,#UART0_S2_OFFSET]
  241 0000007C         ;Enable UART0 receiver and transmitter
  242 0000007C 210C            MOVS             R1,#UART0_C2_T_R
  243 0000007E 70C1            STRB             R1,[R0,#UART0_C2_OFFSET]
  244 00000080         ;Poll TDRE until UART0 ready to transmit
  245 00000080 4916            LDR              R1,=UART0_BASE
  246 00000082 2280            MOVS             R2,#UART0_S1_TDRE_MASK
  247 00000084 BC0F            POP              {R0,R1,R2,R3}
  248 00000086 4770            BX               LR
  249 00000088         
  250 00000088         
  251 00000088         PUTCHAR
  252 00000088         ;Poll REDRF until UART0 ready to recieve
  253 00000088 B40E            PUSH             {R1,R2,R3}
  254 0000008A 4914            LDR              R1,=UART0_BASE
  255 0000008C 2280            MOVS             R2, #UART0_S1_TDRE_MASK
  256 0000008E         
  257 0000008E         POLLTX
  258 0000008E 790B            LDRB             R3,[R1, #UART0_S1_OFFSET]
  259 00000090 4013            ANDS             R3,R3,R2
  260 00000092 D0FC            BEQ              POLLTX
  261 00000094         ;Recieve character and store in R0
  262 00000094 71C8            STRB             R0,[R1,#UART0_D_OFFSET]
  263 00000096 BC0E            POP              {R1,R2,R3}
  264 00000098 4770            BX               LR
  265 0000009A         
  266 0000009A         GETCHAR
  267 0000009A         ;Poll TDRE until UART0 ready to transmit
  268 0000009A B40E            PUSH             {R1,R2,R3}
  269 0000009C 490F            LDR              R1,=UART0_BASE
  270 0000009E 2220            MOVS             R2,#UART0_S1_RDRF_MASK
  271 000000A0         
  272 000000A0         POLLRX
  273 000000A0 790B            LDRB             R3,[R1,#UART0_S1_OFFSET]
  274 000000A2 4013            ANDS             R3,R3,R2
  275 000000A4 D0FC            BEQ              POLLRX
  276 000000A6         ;Recieve character and store in R0
  277 000000A6 79C8            LDRB             R0,[R1,#UART0_D_OFFSET]
  278 000000A8 BC0E            POP              {R1,R2,R3}
  279 000000AA 4770            BX               LR
  280 000000AC         ;>>>>>   end subroutine code <<<<<
  281 000000AC                 ALIGN
  282 000000AC         ;*******************************************************
                       *********
  283 000000AC         ;Vector Table Mapped to Address 0 at Reset
  284 000000AC         ;Linker requires __Vectors to be exported



ARM Macro Assembler    Page 7 Program Title for Listing Header Goes Here


  285 000000AC 40048004 
              0C000000 
              04010000 
              40048010 
              00010007 
              40048034 
              00000400 
              40048038 
              00000200 
              40049004 
              01000200 
              40049008 
              4006A000         AREA             RESET, DATA, READONLY
  286 00000000                 EXPORT           __Vectors
  287 00000000                 EXPORT           __Vectors_End
  288 00000000                 EXPORT           __Vectors_Size
  289 00000000                 IMPORT           __initial_sp
  290 00000000                 IMPORT           Dummy_Handler
  291 00000000         __Vectors
  292 00000000         ;AR3 core vectors
  293 00000000 00000000        DCD              __initial_sp ;00:end of stack
  294 00000004 00000000        DCD              Reset_Handler ;01:reset vector
  295 00000008 00000000        DCD              Dummy_Handler ;02:NMI
  296 0000000C 00000000        DCD              Dummy_Handler ;03:hard fault
  297 00000010 00000000        DCD              Dummy_Handler ;04:(reserved)
  298 00000014 00000000        DCD              Dummy_Handler ;05:(reserved)
  299 00000018 00000000        DCD              Dummy_Handler ;06:(reserved)
  300 0000001C 00000000        DCD              Dummy_Handler ;07:(reserved)
  301 00000020 00000000        DCD              Dummy_Handler ;08:(reserved)
  302 00000024 00000000        DCD              Dummy_Handler ;09:(reserved)
  303 00000028 00000000        DCD              Dummy_Handler ;10:(reserved)
  304 0000002C 00000000        DCD              Dummy_Handler ;11:SVCall (super
                                                            visor call)
  305 00000030 00000000        DCD              Dummy_Handler ;12:(reserved)
  306 00000034 00000000        DCD              Dummy_Handler ;13:(reserved)
  307 00000038 00000000        DCD              Dummy_Handler ;14:PendableSrvRe
                                                            q (pendable request
                                                             
  308 0000003C         ;   for system service)
  309 0000003C 00000000        DCD              Dummy_Handler ;15:SysTick (syst
                                                            em tick timer)
  310 00000040 00000000        DCD              Dummy_Handler ;16:DMA channel 0
                                                             xfer complete/erro
                                                            r
  311 00000044 00000000        DCD              Dummy_Handler ;17:DMA channel 1
                                                             xfer complete/erro
                                                            r
  312 00000048 00000000        DCD              Dummy_Handler ;18:DMA channel 2
                                                             xfer complete/erro
                                                            r
  313 0000004C 00000000        DCD              Dummy_Handler ;19:DMA channel 3
                                                             xfer complete/erro
                                                            r
  314 00000050 00000000        DCD              Dummy_Handler ;20:(reserved)
  315 00000054 00000000        DCD              Dummy_Handler ;21:command compl
                                                            ete; read collision
                                                            
  316 00000058 00000000        DCD              Dummy_Handler ;22:low-voltage d
                                                            etect;



ARM Macro Assembler    Page 8 Program Title for Listing Header Goes Here


  317 0000005C         ;   low-voltage warning
  318 0000005C 00000000        DCD              Dummy_Handler ;23:low leakage w
                                                            akeup
  319 00000060 00000000        DCD              Dummy_Handler ;24:I2C0
  320 00000064 00000000        DCD              Dummy_Handler ;25:I2C1
  321 00000068 00000000        DCD              Dummy_Handler ;26:SPI0 (all IRQ
                                                             sources)
  322 0000006C 00000000        DCD              Dummy_Handler ;27:SPI1 (all IRQ
                                                             sources)
  323 00000070 00000000        DCD              Dummy_Handler ;28:UART0 (status
                                                            ; error)
  324 00000074 00000000        DCD              Dummy_Handler ;29:UART1 (status
                                                            ; error)
  325 00000078 00000000        DCD              Dummy_Handler ;30:UART2 (status
                                                            ; error)
  326 0000007C 00000000        DCD              Dummy_Handler ;31:ADC0
  327 00000080 00000000        DCD              Dummy_Handler ;32:CMP0
  328 00000084 00000000        DCD              Dummy_Handler ;33:TPM0
  329 00000088 00000000        DCD              Dummy_Handler ;34:TPM1
  330 0000008C 00000000        DCD              Dummy_Handler ;35:TPM2
  331 00000090 00000000        DCD              Dummy_Handler ;36:RTC (alaR3)
  332 00000094 00000000        DCD              Dummy_Handler ;37:RTC (seconds)
                                                            
  333 00000098 00000000        DCD              Dummy_Handler ;38:PIT (all IRQ 
                                                            sources)
  334 0000009C 00000000        DCD              Dummy_Handler ;39:I2S0
  335 000000A0 00000000        DCD              Dummy_Handler ;40:USB0
  336 000000A4 00000000        DCD              Dummy_Handler ;41:DAC0
  337 000000A8 00000000        DCD              Dummy_Handler ;42:TSI0
  338 000000AC 00000000        DCD              Dummy_Handler ;43:MCG
  339 000000B0 00000000        DCD              Dummy_Handler ;44:LPTMR0
  340 000000B4 00000000        DCD              Dummy_Handler ;45:Segment LCD
  341 000000B8 00000000        DCD              Dummy_Handler ;46:PORTA pin det
                                                            ect
  342 000000BC 00000000        DCD              Dummy_Handler ;47:PORTC and POR
                                                            TD pin detect
  343 000000C0         __Vectors_End
  344 000000C0 000000C0 
                       __Vectors_Size
                               EQU              __Vectors_End - __Vectors
  345 000000C0                 ALIGN
  346 000000C0         ;*******************************************************
                       *********
  347 000000C0         ;Constants
  348 000000C0                 AREA             MyConst,DATA,READONLY
  349 00000000         ;>>>>> begin constants here <<<<<
  350 00000000         ;>>>>>   end constants here <<<<<
  351 00000000                 ALIGN
  352 00000000         ;*******************************************************
                       *********
  353 00000000         ;VaR0ables
  354 00000000                 AREA             MyData,DATA,READWRITE
  355 00000000         ;>>>>> begin vaR0ables here <<<<<
  356 00000000         ;>>>>>   end vaR0ables here <<<<<
  357 00000000                 ALIGN
  358 00000000                 END
Command Line: --debug --diag_suppress=9931 --cpu=Cortex-M0+ --apcs=interwork --
depend=.\objects\exercise05.d -o.\objects\exercise05.o -ID:\Assembly\RTE -IC:\K
eil_v5\ARM\PACK\Keil\Kinetis_KLxx_DFP\1.6.0\Device\Include -IC:\Keil_v5\ARM\CMS



ARM Macro Assembler    Page 9 Program Title for Listing Header Goes Here


IS\Include --predefine="__UVISION_VERSION SETA 515" --predefine="MKL46Z256xxx4 
SETA 1" --list=.\listings\exercise05.lst Exercise05.s
